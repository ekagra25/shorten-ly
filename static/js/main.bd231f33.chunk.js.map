{"version":3,"sources":["components/AboutComponent.js","components/HeaderComponent.js","actions/postURL.js","components/URLFormComponent.js","components/MainComponent.js","serviceWorker.js","index.js","images/logo.png","images/title.png"],"names":["About","props","useState","aboutModal","setModal","toggle","Button","color","size","onClick","className","Modal","isOpen","ModalHeader","ModalBody","href","target","Header","HomeTooltipOpen","setHomeTooltipOpen","AboutTooltipOpen","setAboutTooltipOpen","Navbar","dark","NavbarBrand","id","src","logo","height","width","alt","Tooltip","placement","Nav","navbar","NavItem","urls","callback","a","process","PORT","axios","method","url","headers","data","longURL","then","response","code","Post","URLForm","toggleCopyTooltip","setState","copyTooltipOpen","state","toggleCopyPopover","copyPopoverOpen","shortLink","copied","SubmitHandler","bind","handleCopy","event","pattern","preventDefault","userURL","value","toLowerCase","test","err","console","log","copy","this","Card","style","borderColor","opacity","CardHeader","backgroundColor","CardBody","Form","onSubmit","FormGroup","Label","for","Input","type","name","placeholder","InputGroup","disabled","InputGroupAddon","addonType","Popover","PopoverBody","block","Component","Main","class","role","alignItems","title","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.bd231f33.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nfunction About (props) {\n    const [aboutModal, setModal] = useState(false);\n\n    const toggle = () => setModal(!aboutModal);\n\n    return (\n        <div>\n            <Button color=\"info\" size=\"sm\" onClick={toggle}>\n                <span className=\"fa fa-info-circle fa-lg\"></span>\n            </Button>\n            <Modal isOpen={aboutModal} toggle={toggle}>\n                <ModalHeader toggle={toggle}>About Shorten-ly</ModalHeader>\n                <ModalBody>\n                    <p>\n                        This web application is a working protoype of a link-shortening service.\n                        Though it completely serves the puropse, it may not be suitable for practical use\n                        since the domain-name is itself a stretched string.\n                    </p>\n                    <hr />\n                    <p>\n                        Frontend designed and developed by <a href=\"https://github.com/ekagra25\" target=\"_blank\"><strong>Ekagra Midha</strong></a>\n                    </p>\n                    <p>\n                        Backend developed by <a href=\"https://github.com/tanishq-sharma\" target=\"_blank\"><strong>Tanishq Sharma</strong></a>\n                    </p>\n                    <p>\n                        Supported by <a href=\"https://github.com/shashankshekhar7\" target=\"_blank\"><strong>Shashank Shekhar</strong></a>\n                    </p>\n                </ModalBody>\n            </Modal>\n        </div>\n    );\n}\n\nexport default About;","import React, { useState } from 'react';\nimport logo from '../images/logo.png';\nimport { Navbar, NavbarBrand, NavItem, Nav, Tooltip } from 'reactstrap';\nimport About from './AboutComponent';\n\nfunction Header (props) {\n    const [HomeTooltipOpen, setHomeTooltipOpen] = useState(false);\n    const [AboutTooltipOpen, setAboutTooltipOpen] = useState(false);\n\n    const toggleHomeTooltip = () => setHomeTooltipOpen(!HomeTooltipOpen);\n    const toggleAboutTooltip = () => setAboutTooltipOpen(!AboutTooltipOpen);\n\n    return (\n        <header className=\"mb-auto\">\n            <Navbar dark color=\"faded\">\n                <div className=\"container\">\n                    <NavbarBrand className=\"mr-auto\" href=\"\" id=\"homeButton\">\n                        <img src={logo} height=\"auto\" width=\"50px\" alt=\"Logo\" />\n                    </NavbarBrand>\n                    <Tooltip placement=\"bottom\" isOpen={HomeTooltipOpen} target=\"homeButton\" toggle={toggleHomeTooltip}>\n                        Home\n                    </Tooltip>\n                    <Nav navbar>\n                        <NavItem  id=\"infoButton\">\n                            <About />\n                            <Tooltip placement=\"bottom\" isOpen={AboutTooltipOpen} target=\"infoButton\" toggle={toggleAboutTooltip}>\n                                About Shorten-ly\n                            </Tooltip>\n                        </NavItem>\n                    </Nav>\n                </div>\n            </Navbar>\n        </header>\n    );\n}\n\nexport default Header;","import axios from 'axios';\n\nasync function Post (urls, callback) {\n    const Port = process.env.PORT || 7000;\n    axios ({\n        method: 'post',\n        url: `https://shorten-ly.herokuapp.com/api`,\n        headers: {},\n        data: { longURL: urls }\n    }).then (response => {\n                const code = response.data;\n                callback (null, code);\n            });\n}\n\nexport default Post;\n","import React, { Component } from \"react\";\nimport Post from '../actions/postURL';\nimport { Card, CardHeader, CardBody, Form, FormGroup, Label, Input, Button, InputGroup, InputGroupAddon, Tooltip, Popover, PopoverBody } from 'reactstrap';\nimport copy from 'copy-to-clipboard';\n\nclass URLForm extends Component {\n\n    constructor (props) {\n        super (props);\n        \n        this.state = {\n            shortLink: '',\n            copyTooltipOpen: false,\n            copyPopoverOpen: false,\n            copied: false\n        }\n\n        this.SubmitHandler = this.SubmitHandler.bind (this);\n        this.toggleCopyTooltip = this.toggleCopyTooltip.bind (this);\n        this.toggleCopyPopover = this.toggleCopyPopover.bind (this);\n        this.handleCopy = this.handleCopy.bind (this);\n    }\n\n    \n\n    async SubmitHandler (event) {\n        const pattern = /^((http|https|ftp):\\/\\/)/;\n        event.preventDefault();\n        var url = event.target.userURL.value;\n        url = url.toLowerCase();\n        if (pattern.test (url)) {\n            await Post (url, (err, code) => {\n                console.log (this.shortLink);\n                this.setState ({\n                    shortLink: 'https://shorten-ly.herokuapp.com/' + code['shortCode']\n                });\n            })\n        }\n    }\n\n    toggleCopyTooltip = () => {\n        this.setState ({\n            copyTooltipOpen: !this.state.copyTooltipOpen\n        });\n    }\n\n    toggleCopyPopover = () => {\n        this.setState ({\n            copyPopoverOpen: !this.state.copyPopoverOpen\n        });\n    }\n\n    handleCopy () {\n        copy (this.state.shortLink);\n        this.setState ({\n            copyPopoverOpen: true\n        });\n    }\n\n    render() {\n        return (\n            <Card style={{borderColor: '#aaaaaa', opacity: '0.75'}}>\n                <CardHeader style={{backgroundColor: '#aaaaaa'}}><strong>Shorten your link here...</strong></CardHeader>\n                <CardBody style={{backgroundColor: '#f9f9f9'}}>\n                    <Form onSubmit={this.SubmitHandler}>\n                        <FormGroup>\n                            <Label for=\"userURL\">Your Link</Label>\n                            <Input type=\"url\" id= \"userURL\" name=\"userURL\" placeholder=\"https://your-link-here.com\" />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"shortURL\">Short Link</Label>\n                            <InputGroup id=\"shortLinkCopyGroup\">\n                                <Input type=\"url\" name=\"shortURL\" placeholder=\"https://shorten-ly.com/example\"\n                                    value={this.state.shortLink} disabled={this.state.shortLink === '' ? true : false} />\n                                <InputGroupAddon addonType=\"append\">\n                                    <Button id=\"copyButton\" disabled={this.state.shortLink === ''} onClick = {this.handleCopy}>\n                                        <span className=\"fa fa-copy fa-lg\"></span>\n                                    </Button>\n                                    <Tooltip placement=\"top\" isOpen={this.state.copyTooltipOpen} target=\"copyButton\" toggle={this.toggleCopyTooltip}>\n                                        Copy\n                                    </Tooltip>\n                                </InputGroupAddon>\n                            </InputGroup>\n                            <Popover placement=\"top\" isOpen={this.state.copyPopoverOpen} target=\"shortLinkCopyGroup\">\n                                <PopoverBody>\n                                    Copied!{' '}<span className=\"fa fa-times-circle fa-red\" onClick={this.toggleCopyPopover}></span>\n                                </PopoverBody>\n                            </Popover>\n                        </FormGroup>\n                        <Button color=\"primary\" type=\"submit\" className=\"align-items-center\" block>Shorten</Button>\n                    </Form>\n                </CardBody>\n            </Card>\n        );\n    }\n}\n\nexport default URLForm;","import React from 'react';\nimport Header from './HeaderComponent';\nimport URLForm from './URLFormComponent';\nimport title from '../images/title.png';\n\nfunction Main () {\n    return (\n        <div class=\"container d-flex h-100 p-3 mx-auto flex-column\">\n            <Header />\n     \n            <main role=\"main\" class=\"inner cover\">\n                <div className=\"container\">\n                    <div className=\"row d-flex\" style={{alignItems: 'center'}}>\n                        <div className=\"col-md-6\">\n                            <img src={title} alt='Title' width=\"100%\" height=\"auto\" />\n                            <p className=\"mt-4\" id=\"headline\">A small solution to your large URLs. Input your URL to cut it short.</p>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <URLForm className=\"Copy\"/>\n                        </div>\n                    </div>\n                </div>\n            </main>\n\n            <footer class=\"mt-auto\">\n                <div class=\"inner\">\n                    <p>© Copyright 2020 Shorten-ly | 1shatan</p>\n                </div>\n            </footer>\n        </div>\n    );\n}\n\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './components/MainComponent';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './App.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render (\n    <React.StrictMode>\n        <Main />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.aad09bad.png\";","module.exports = __webpack_public_path__ + \"static/media/title.f4bfaac0.png\";"],"sourceRoot":""}